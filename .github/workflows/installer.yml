name: Make single-file installers

on:
  workflow_dispatch:
  push:  # Development only - remove before merging!

jobs:
  test:
    name: Building single file installer on ${{ matrix.cfg.os }}, Python ${{ matrix.python-version }}

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - macOS-latest
          - ubuntu-latest
        python-version:
          # 3.7
          # 3.8
          - 3.9

    env:
      CI_OS: ${{ matrix.os }}
      PYVER: ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v2.4.0

    - uses: conda-incubator/setup-miniconda@v2.1.1
      with:
        python-version: ${{ matrix.python-version }}
        activate-environment: constructor
        environment-file: devtools/conda-envs/installer.yaml
        auto-activate-base: false

    - name: Prepare and run the constructor
      shell: bash -l {0}
      run: |
        # Find the tag of the last release (excluding RCs)
        export LATEST_TAG=$(git ls-remote --tags https://github.com/openforcefield/openff-bespokefit.git | cut -f2 | grep -E "([0-9]+)\.([0-9]+)\.([0-9]+)$" | sort --version-sort | tail -1 | sed 's/refs\/tags\///')

        echo $LATEST_TAG

        git clone https://github.com/openforcefield/toolkit-installer-constructor
        cd toolkit-installer-constructor
        git fetch --all
        git checkout origin/bespokefit

        python ../devtools/scripts/build_cookiecutter_json.py $LATEST_TAG $PYVER $CI_OS
        cp new_cookiecutter.json cookiecutter/cookiecutter.json

        cat new_cookiecutter.json

        python run.py

    - name: Upload installer as artifact
      uses: actions/upload-artifact@v3
      if: github.repository == 'foo-bar/foo-bar'
      with:
        name: ${{ matrix.os }}_py${{ matrix.python-version }}.sh
        path: toolkit-installer-constructor/build/openff-bespokefit*/openff-toolkit*.sh

    - name: Install from installer
      shell: bash -l {0}
      run: |
        mkdir scratch
        cd scratch
        echo $HOME/constructor_install/ | bash ../toolkit-installer-constructor/build/openff-bespokefit-*/openff-bespokefit-*py*

        conda activate $HOME/constructor_install/

        export FOUND_VER=$(python -c "import openff.bespokefit; print(openff.bespokefit.__version__)")
        export LATEST_TAG=$(git ls-remote --tags https://github.com/openforcefield/openff-bespokefit.git| grep -E "([0-9]+)\.([0-9]+)\.([0-9]+)$" | sort --version-sort | tail -n1 | sed 's/refs\/tags\///' | cut -f2)


        if [[ $LATEST_TAG != $FOUND_VER ]];
          then echo "Version mismatch"
          echo $LATEST_TAG
          echo $FOUND_VER
          exit 1
        fi

        # The toolkit's action does not require installing optional and test-only
        # dependencies, not sure if/why they need to be brought in here
        conda install "forcebalance >=1.9.2" "openff-fragmenter-base >=0.1.2" -c conda-forge -yq
        conda install pytest pytest-cov pytest-asyncio pytest-celery codecov requests-mock -c conda-forge -yq

        echo "Done installing, here's the conda env:"
        conda info
        conda list

        echo "Starting tests:"
        PYTEST_ARGS=" -r fE --tb=short"
        pytest $PYTEST_ARGS ../openff/bespokefit/tests/

