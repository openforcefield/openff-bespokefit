name: CI

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  schedule:
    - cron: "0 0 * * *"

jobs:
  test:

    name: ${{ matrix.os }}, 🐍=${{ matrix.python-version }}, 👁️=${{ matrix.openeye }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest]
        python-version: [3.8]
        openeye: [true, false]

    env:
      OE_LICENSE: ${{ github.workspace }}/oe_license.txt

    steps:
      - uses: actions/checkout@v3

      - name: Install with OpenEye Toolkits
        uses: conda-incubator/setup-miniconda@v2.1.1
        if: ${{ matrix.openeye == true }}
        with:
          python-version: ${{ matrix.python-version }}
          mamba-version: "*"
          environment-file: devtools/conda-envs/test-env.yaml

          channels: openeye,conda-forge,nodefaults

          activate-environment: test
          auto-update-conda: true
          auto-activate-base: false
          show-channel-urls: true

      - name: Install with AmberTools
        uses: conda-incubator/setup-miniconda@v2.1.1
        if: ${{ matrix.openeye == false }}
        with:
          python-version: ${{ matrix.python-version }}
          environment-file: devtools/conda-envs/no_openeye.yaml

          channels: conda-forge,nodefaults

          activate-environment: test
          auto-update-conda: true
          auto-activate-base: false
          show-channel-urls: true

      - name: License OpenEye
        shell: bash -l {0}
        if: ${{ matrix.openeye == true }}
        run: |
          echo "${SECRET_OE_LICENSE}" > ${OE_LICENSE}
          python -c "from openeye import oechem; assert oechem.OEChemIsLicensed()"
        env:
          SECRET_OE_LICENSE: ${{ secrets.OE_LICENSE }}

      - name: Install Package
        shell: bash -l {0}
        run: |
          python setup.py develop --no-deps

      - name: Conda Environment Information
        shell: bash -l {0}
        run: |
          conda info
          conda list

      - name: Run Tests
        shell: bash -l {0}
        run: |
          pytest -v --cov=openff --cov-config=setup.cfg openff/bespokefit/tests/ --cov-report=xml

      - name: Codecov
        uses: codecov/codecov-action@v3.1.1
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
