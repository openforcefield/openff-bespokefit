name: CI

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"
  schedule:
    - cron: "0 0 * * *"

jobs:
  test:
    name: Test on ${{ matrix.cfg.os }}, Python=${{ matrix.python-version }}, Program=${{ matrix.cfg.prog }}
    runs-on: ${{ matrix.cfg.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - 3.6
          - 3.7
          # - 3.8
        cfg:
          - os: ubuntu-latest
            prog: XTB

          - os: macOS-latest
            prog: NONE


    env:
      CI_OS: ${{ matrix.cfg.os }}
      PROG: ${{ matrix.cfg.prog }}
      PYVER: ${{ matrix.python-version }}
      OE_LICENSE: ${{ github.workspace }}/oe_license.txt

    steps:
      - uses: actions/checkout@v2
      - name: Additional info about the build
        shell: bash
        run: |
          uname -a
          df -h
          ulimit -a

      - name: Fix conda in MacOS
        shell: bash
        if: startsWith(matrix.cfg.os, 'macOS')
        run: |
          sudo chown -R $(id -u):$(id -g) ${CONDA}

      - name: Configure conda
        shell: bash
        run: |
          . devtools/gh-actions/initialize_conda.sh
          conda activate
          conda config --set always_yes yes
          conda config --add channels omnia --add channels conda-forge --add channels openeye
          conda install --quiet conda conda-build jinja2 anaconda-client
          conda update --quiet --all
          conda info --all
          conda list

      - name: Decrypt ORG OpenEye license
        shell: bash
        env:
          ENC_OE_LICENSE: ${{ secrets.OE_LICENSE }}
        run: |
            echo "${ENC_OE_LICENSE}" > ${OE_LICENSE}

      - name: Prepare test enviroment
        shell: bash
        run: |
          . devtools/gh-actions/initialize_conda.sh
          conda activate
          if [ $PROG == "NONE" ]; then
            python devtools/scripts/create_conda_env.py -n=test -p=$PYVER devtools/conda-envs/test_env.yaml
          elif [ $PROG == "XTB" ]; then
            python devtools/scripts/create_conda_env.py -n=test -p=$PYVER devtools/conda-envs/xtb_env.yaml
          else
            echo "ERROR: No match for PROG ($PROG)."
          fi
          conda activate test
          python -c "from openeye import oechem; assert oechem.OEChemIsLicensed()"
          python setup.py develop --no-deps
          conda list

      - name: Test the package
        shell: bash
        run: |
          . devtools/gh-actions/initialize_conda.sh
          conda activate test
          pytest -v --cov=openff --cov-config=setup.cfg openff/bespokefit/tests/ --cov-report=xml

      - name: Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          fail_ci_if_error: true